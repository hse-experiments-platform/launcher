{
  "swagger": "2.0",
  "info": {
    "title": "HSE MLOps Launcher service",
    "description": "Launcher service for mlops project.",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "LauncherService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/launches": {
      "get": {
        "operationId": "LauncherService_GetLaunches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetLaunchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "nameQuery",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "launchType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LaunchTypeUnknown",
              "LaunchTypeDatasetUpload",
              "LaunchTypeDatasetSetTypes",
              "LaunchTypeDatasetPreprocess",
              "LaunchTypeTrain",
              "LaunchTypePredict",
              "LaunchTypeGenericConvert"
            ],
            "default": "LaunchTypeUnknown"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_preprocess": {
      "post": {
        "operationId": "LauncherService_LaunchDatasetPreprocess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetPreprocessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetPreprocessRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_preprocess/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetDatasetPreprocessLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetDatasetPreprocessLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_set_types": {
      "post": {
        "operationId": "LauncherService_LaunchDatasetSetTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetSetTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetSetTypesRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_set_types/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetDatasetSetTypesLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetDatasetSetTypesLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_upload": {
      "post": {
        "operationId": "LauncherService_LaunchDatasetUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetUploadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchDatasetUploadRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/dataset_upload/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetDatasetUploadLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetDatasetUploadLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/generic_convert": {
      "post": {
        "operationId": "LauncherService_LaunchGenericConvert",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchGenericConvertResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchGenericConvertRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/generic_convert/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetGenericConvertLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetGenericConvertLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/predict": {
      "post": {
        "operationId": "LauncherService_LaunchPredict",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchPredictResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchPredictRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/predict/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetPredictLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetPredictLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/train": {
      "post": {
        "operationId": "LauncherService_LaunchTrain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherLaunchTrainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/launcherLaunchTrainRequest"
            }
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/train/{launchID}": {
      "get": {
        "operationId": "LauncherService_GetTrainLaunch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherGetTrainLaunchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    },
    "/api/v1/launches/{launchID}/wait": {
      "post": {
        "operationId": "LauncherService_WaitForLaunchFinish",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/launcherWaitForLaunchFinishResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "launchID",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "LauncherService"
        ],
        "security": [
          {
            "AccessToken": []
          }
        ]
      }
    }
  },
  "definitions": {
    "launcherAggregateFunction": {
      "type": "string",
      "enum": [
        "AggregateFunctionUndefined",
        "AggregateFunctionMean",
        "AggregateFunctionMedian",
        "AggregateFunctionMin",
        "AggregateFunctionMax",
        "AggregateFunctionMostFrequent"
      ],
      "default": "AggregateFunctionUndefined"
    },
    "launcherColumnType": {
      "type": "string",
      "enum": [
        "ColumnTypeUndefined",
        "ColumnTypeInteger",
        "ColumnTypeFloat",
        "ColumnTypeCategorial",
        "ColumnTypeString",
        "ColumnTypeDropped"
      ],
      "default": "ColumnTypeUndefined"
    },
    "launcherCommonLaunchInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "launcherFillingTechnique": {
      "type": "string",
      "enum": [
        "FillingTechniqueUndefined",
        "FillingTechniqueNone",
        "FillingTechniqueConstant",
        "FillingTechniqueTypeDefault",
        "FillingTechniqueAggregateFunction",
        "FillingTechniqueDeleteRow"
      ],
      "default": "FillingTechniqueUndefined"
    },
    "launcherGetDatasetPreprocessLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "preprocessSettings": {
          "$ref": "#/definitions/launcherPreprocessSettings"
        }
      }
    },
    "launcherGetDatasetSetTypesLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "columnTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/launcherColumnType"
          },
          "title": "установленные типы колонок"
        }
      }
    },
    "launcherGetDatasetUploadLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "columnTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/launcherColumnType"
          },
          "title": "автоопределенные типы колонок"
        }
      }
    },
    "launcherGetGenericConvertLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "inputS3Object": {
          "type": "string"
        },
        "converterType": {
          "type": "string"
        },
        "outputS3File": {
          "type": "string"
        }
      }
    },
    "launcherGetLaunchesResponse": {
      "type": "object",
      "properties": {
        "launches": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/launcherLaunchInfo"
          }
        },
        "pageInfo": {
          "$ref": "#/definitions/launcherPageInfo"
        }
      }
    },
    "launcherGetPredictLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "trainedModelID": {
          "type": "string",
          "format": "int64"
        },
        "resultDatasetID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherGetTrainLaunchResponse": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherLaunchInfo"
        },
        "error": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "trainedModelID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchDatasetPreprocessRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "preprocessSettings": {
          "$ref": "#/definitions/launcherPreprocessSettings"
        }
      }
    },
    "launcherLaunchDatasetPreprocessResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchDatasetSetTypesRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        },
        "columnTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/launcherSetTypeSettings"
          }
        }
      }
    },
    "launcherLaunchDatasetSetTypesResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchDatasetUploadRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "url": {
          "type": "string"
        },
        "datasetID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchDatasetUploadResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchGenericConvertRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "s3Object": {
          "type": "string"
        },
        "converterType": {
          "type": "string"
        }
      }
    },
    "launcherLaunchGenericConvertResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchInfo": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "launchType": {
          "$ref": "#/definitions/launcherLaunchType"
        },
        "status": {
          "$ref": "#/definitions/launcherLaunchStatus"
        }
      }
    },
    "launcherLaunchPredictRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "modelSettings": {
          "$ref": "#/definitions/launcherTrainingModelSettings"
        },
        "datasetSettings": {
          "$ref": "#/definitions/launcherPredictionDatasetSettings"
        }
      }
    },
    "launcherLaunchPredictResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchStatus": {
      "type": "string",
      "enum": [
        "LaunchStatusUnknown",
        "LaunchStatusNotStarted",
        "LaunchStatusInProgress",
        "LaunchStatusError",
        "LaunchStatusSuccess"
      ],
      "default": "LaunchStatusUnknown"
    },
    "launcherLaunchTrainRequest": {
      "type": "object",
      "properties": {
        "launchInfo": {
          "$ref": "#/definitions/launcherCommonLaunchInfo"
        },
        "modelSettings": {
          "$ref": "#/definitions/launcherTrainingModelSettings"
        },
        "datasetSettings": {
          "$ref": "#/definitions/launcherTrainingDatasetSettings"
        }
      }
    },
    "launcherLaunchTrainResponse": {
      "type": "object",
      "properties": {
        "launchID": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "launcherLaunchType": {
      "type": "string",
      "enum": [
        "LaunchTypeUnknown",
        "LaunchTypeDatasetUpload",
        "LaunchTypeDatasetSetTypes",
        "LaunchTypeDatasetPreprocess",
        "LaunchTypeTrain",
        "LaunchTypePredict",
        "LaunchTypeGenericConvert"
      ],
      "default": "LaunchTypeUnknown"
    },
    "launcherPageInfo": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "total": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "launcherPredictionDatasetSettings": {
      "type": "object",
      "properties": {
        "datasetId": {
          "type": "string",
          "format": "uint64"
        },
        "usePreprocessingFromTrainDataset": {
          "type": "boolean"
        }
      }
    },
    "launcherPreprocessSettings": {
      "type": "object",
      "title": "TODO: preprocess"
    },
    "launcherSetTypeSettings": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/launcherColumnType"
        },
        "fillingTechnique": {
          "$ref": "#/definitions/launcherFillingTechnique"
        },
        "aggregateFunction": {
          "$ref": "#/definitions/launcherAggregateFunction"
        },
        "fillingValue": {
          "type": "string"
        }
      }
    },
    "launcherTrainingDatasetSettings": {
      "type": "object",
      "properties": {
        "datasetID": {
          "type": "string",
          "format": "uint64"
        },
        "targetColumn": {
          "type": "string"
        },
        "trainTestSplit": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "launcherTrainingModelSettings": {
      "type": "object",
      "properties": {
        "modelID": {
          "type": "string",
          "format": "uint64"
        },
        "hyperparameterValues": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "launcherWaitForLaunchFinishResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "AccessToken": {
      "type": "apiKey",
      "description": "Enter the token with the `Bearer: ` prefix, e.g. \"Bearer abcde12345\"",
      "name": "Authorization",
      "in": "header"
    }
  }
}
